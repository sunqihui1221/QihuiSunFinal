library(httr)
library(dplyr)
library(tidyverse)
library(jsonlite)
library(xml2)
library(rvest)
pokemon_data <- function() {
endpoint <- "https://pokeapi.co/api/v2/pokemon/?offset807&limit=807"
data <- GET(endpoint)
newdata <- fromJSON(content(data, as = "text"))
pokemon <- newdata[[4]] %>% as.data.frame()
detail=function(url){
base=GET(url)
infotb=fromJSON(content(base, as = "text"))
weight=infotb['weight']
height=infotb['height']
fund=data.frame('weight'=weight,'height'=height)
return (fund)
}
new_pk <- pokemon %>% mutate(df=map(url,detail))
pokemon_final <- new_pk %>% unnest(df)
pokemon_final %>% select(-url)
getinfo <- function(name){
website=paste0('https://pokemondb.net/pokedex/',name)
g=GET(website)
if(g$status_code!=200){return (NA)}
poke <- read_html(website)
stat <-html_nodes(poke,".vitals-table")
table <- html_table(stat)[[4]]
finaltable <- table%>%select(X1,X2)%>%pivot_wider(names_from = X1,values_from = X2)
return (finaltable)
}
final <- pokemon_final %>% mutate(ability=map(name,getinfo))
final_pokemon_data <- final %>% select(-url) %>% filter(!is.na(ability)) %>% unnest(ability) %>% rename(Pokemon_Name = name, Weight = weight, Height = height, Total_Ability = Total) %>% arrange(desc(Total_Ability))
final_pokemon_data
}
pokemon_data()
pokemon_data_partial <- function(para){
df <- pokemon_data()
paracol <- select(df, para)
return(cbind(df$Pokemon_Name, paracol))
}
pokemon_data_partial("Weight")
summary_pokemon_data_partial <- function(para, summary) {
df <- pokemon_data()
partial <- select(df, para)
if (summary == TRUE) {
return(summary(partial))
}
}
summary_pokemon_data_partial("Weight", TRUE)
summary_pokemon_data_partial("Weight", TRUE)
library(httr)
library(dplyr)
library(tidyverse)
library(jsonlite)
library(xml2)
library(rvest)
library(ggplot2)
pokemon_graph <- function(para)
df <- pokemon_data()
ggplot(data = df) +
geom_histogram(mapping = aes(x = para))
pokemon_graph <- function(para)
df <- pokemon_data()
ggplot(df) +
geom_histogram(mapping = aes(x = para))
pokemon_graph <- function(para)
df <- pokemon_data()
ggplot(data = df) +
geom_histogram(mapping = aes(x = para))
pokemon_graph <- function(parameter)
df <- pokemon_data()
ggplot(data = df) +
geom_histogram(mapping = aes(x = parameter))
pokemon_graph <- function(parameter)
df <- pokemon_data()
ggplot(data = df) +
geom_histogram(mapping = aes(x = parameter))
df
df
typeof(final_pokemon_data)
typeof(pokemon_data())
pokemon_data()
df
pokemon_data_partial <- function(para){
df <- pokemon_data()
paracol <- select(df, para)
return(cbind(df$Pokemon_Name, paracol))
}
pokemon_data_partial <- function(para){
df <- pokemon_data()
paracol <- select(df, para)
return(cbind(df$Pokemon_Name, paracol))
}
pokemon_data_partial <- function(para){
df <- pokemon_data()
paracol <- select(df, para)
return(cbind(df$Pokemon_Name, paracol))
}
pokemon_data_partial("Weight")
pokemon_data()
pokemon_data <- function() {
endpoint <- "https://pokeapi.co/api/v2/pokemon/?offset807&limit=807"
data <- GET(endpoint)
newdata <- fromJSON(content(data, as = "text"))
pokemon <- newdata[[4]] %>% as.data.frame()
detail=function(url){
base=GET(url)
infotb=fromJSON(content(base, as = "text"))
weight=infotb['weight']
height=infotb['height']
fund=data.frame('weight'=weight,'height'=height)
return (fund)
}
new_pk <- pokemon %>% mutate(df=map(url,detail))
pokemon_final <- new_pk %>% unnest(df)
pokemon_final %>% select(-url)
getinfo <- function(name){
website=paste0('https://pokemondb.net/pokedex/',name)
g=GET(website)
if(g$status_code!=200){return (NA)}
poke <- read_html(website)
stat <-html_nodes(poke,".vitals-table")
table <- html_table(stat)[[4]]
finaltable <- table%>%select(X1,X2)%>%pivot_wider(names_from = X1,values_from = X2)
return (finaltable)
}
final <- pokemon_final %>% mutate(ability=map(name,getinfo))
final_pokemon_data <- final %>% select(-url) %>% filter(!is.na(ability)) %>% unnest(ability) %>% rename(Pokemon_Name = name, Weight = weight, Height = height, Total_Ability = Total) %>% arrange(desc(Total_Ability))
final_pokemon_data
}
df <- pokemon_data()
df <- pokemon_data()
pokemon_data()
pokemon_graph <- function(parameter)
df <- pokemon_data()
ggplot(data = df) +
geom_histogram(mapping = aes(x = df$parameter))
pokemon_specific <- function(pokemon)
df <- pokemon_data()
filter(df == Pokemon_Name)
filter(df == "Pokemon_Name")
pokemon_specific <- function(pokemon)
df <- pokemon_data()
filter(df == "Pokemon_Name")
pokemon_specific <- function(pokemon)
df <- pokemon_data()
filter(df$"Pokemon_Name" == pokemon)
pokemon_specific <- function(pokemon)
df <- pokemon_data()
filter(df$Pokemon_Name == pokemon)
pokemon_specific <- function(pokemon)
df <- pokemon_data()
filter(df$Pokemon_Name == pokemon)
pokemon_specific <- function(pokemon)
df <- pokemon_data()
a <- filter(df$Pokemon_Name == pokemon)
pokemon_graph <- function(a)
df <- pokemon_data()
ggplot(data=df)+
geom_histogram(mapping=aes(x=a))
load_all()
install.packages("devtools")
load_all()
library(QihuiSunFinal)
library(QihuiSunFinal)
library(QihuiSunFinal)
library(QihuiSunFinal)
library(QihuiSunFinal)
pokemon_data()
check()
use_testthat()
??testthat::expecta
??testthat::expectation
use_readme_rmd()
install.packages("devtools")
use_readme_rmd()
library(devtools)
library(usethis)
library(devtools)
use_readme_rmd()
# Function 1, Show statistics of pokemons, including weight, height and strength.
pokemon_data()
# Function 2, Show chosen statistics of pokemons
pokemon_data_partial("Weight")
# Function3, Show summary statistics of pokemons
summary_pokemon_data_partial("Weight", TRUE)
browseVignettes()
browseVignettes()
browseVignettes("QihuiSunFinal")
browseVignettes("roxygen2")
use_vignette("my-vignette")
pokemon_data <- function() {
requireNamespace("httr")
requireNamespace("dplyr")
requireNamespace("tidyverse")
requireNamespace("jsonlite")
requireNamespace("xml2")
requireNamespace("rvest")
endpoint <- "https://pokeapi.co/api/v2/pokemon/?offset807&limit=807"
data <- GET(endpoint)
newdata <- fromJSON(content(data, as = "text"))
pokemon <- newdata[[4]] %>% as.data.frame()
detail=function(url){
base=GET(url)
infotb=fromJSON(content(base, as = "text"))
weight=infotb['weight']
height=infotb['height']
fund=data.frame('weight'=weight,'height'=height)
return (fund)
}
new_pk <- pokemon %>% mutate(df=map(url,detail))
pokemon_final <- new_pk %>% unnest(df)
pokemon_final %>% select(-url)
getinfo <- function(name){
website=paste0('https://pokemondb.net/pokedex/',name)
g=GET(website)
if(g$status_code!=200){return (NA)}
poke <- read_html(website)
stat <-html_nodes(poke,".vitals-table")
table <- html_table(stat)[[4]]
finaltable <- table%>%select(X1,X2)%>%pivot_wider(names_from = X1,values_from = X2)
return (finaltable)
}
final <- pokemon_final %>% mutate(ability=map(name,getinfo))
final_pokemon_data <- final %>% select(-url) %>% filter(!is.na(ability)) %>% unnest(ability) %>% rename(Pokemon_Name = name, Weight = weight, Height = height, Total_Ability = Total) %>% arrange(desc(Total_Ability))
final_pokemon_data
}
pokemon_data()
pokemon_data_partial <- function(para = "Weight") {
requireNamespace("dplyr")
df <- pokemon_data()
paracol <- select(df, para)
return(cbind(df$Pokemon_Name, paracol))
}
pokemon_data_partial()
summary_pokemon_data_partial <- function(para = "Weight", summary = TRUE) {
requireNamespace("dplyr")
df <- pokemon_data()
partial <- select(df, para)
if (summary == TRUE) {
return(summary(partial))
}
}
summary_pokemon_data_partial()
library("httr")
library("dplyr")
library("tidyverse")
library("jsonlite")
library("xml2")
library("rvest")
pokemon_data <- function() {
requireNamespace("httr")
requireNamespace("dplyr")
requireNamespace("tidyverse")
requireNamespace("jsonlite")
requireNamespace("xml2")
requireNamespace("rvest")
endpoint <- "https://pokeapi.co/api/v2/pokemon/?offset807&limit=807"
data <- GET(endpoint)
newdata <- fromJSON(content(data, as = "text"))
pokemon <- newdata[[4]] %>% as.data.frame()
detail=function(url){
base=GET(url)
infotb=fromJSON(content(base, as = "text"))
weight=infotb['weight']
height=infotb['height']
fund=data.frame('weight'=weight,'height'=height)
return (fund)
}
new_pk <- pokemon %>% mutate(df=map(url,detail))
pokemon_final <- new_pk %>% unnest(df)
pokemon_final %>% select(-url)
getinfo <- function(name){
website=paste0('https://pokemondb.net/pokedex/',name)
g=GET(website)
if(g$status_code!=200){return (NA)}
poke <- read_html(website)
stat <-html_nodes(poke,".vitals-table")
table <- html_table(stat)[[4]]
finaltable <- table%>%select(X1,X2)%>%pivot_wider(names_from = X1,values_from = X2)
return (finaltable)
}
final <- pokemon_final %>% mutate(ability=map(name,getinfo))
final_pokemon_data <- final %>% select(-url) %>% filter(!is.na(ability)) %>% unnest(ability) %>% rename(Pokemon_Name = name, Weight = weight, Height = height, Total_Ability = Total) %>% arrange(desc(Total_Ability))
final_pokemon_data
}
library(dplyr)
pokemon_data_partial <- function(para = "Weight") {
requireNamespace("dplyr")
df <- pokemon_data()
paracol <- select(df, para)
return(cbind(df$Pokemon_Name, paracol))
}
library(dplyr)
library("httr")
library("dplyr")
library("tidyverse")
library("jsonlite")
library("xml2")
library("rvest")
pokemon_data <- function() {
requireNamespace("httr")
requireNamespace("dplyr")
requireNamespace("tidyverse")
requireNamespace("jsonlite")
requireNamespace("xml2")
requireNamespace("rvest")
endpoint <- "https://pokeapi.co/api/v2/pokemon/?offset807&limit=807"
data <- GET(endpoint)
newdata <- fromJSON(content(data, as = "text"))
pokemon <- newdata[[4]] %>% as.data.frame()
detail=function(url){
base=GET(url)
infotb=fromJSON(content(base, as = "text"))
weight=infotb['weight']
height=infotb['height']
fund=data.frame('weight'=weight,'height'=height)
return (fund)
}
new_pk <- pokemon %>% mutate(df=map(url,detail))
pokemon_final <- new_pk %>% unnest(df)
pokemon_final %>% select(-url)
getinfo <- function(name){
website=paste0('https://pokemondb.net/pokedex/',name)
g=GET(website)
if(g$status_code!=200){return (NA)}
poke <- read_html(website)
stat <-html_nodes(poke,".vitals-table")
table <- html_table(stat)[[4]]
finaltable <- table%>%select(X1,X2)%>%pivot_wider(names_from = X1,values_from = X2)
return (finaltable)
}
final <- pokemon_final %>% mutate(ability=map(name,getinfo))
final_pokemon_data <- final %>% select(-url) %>% filter(!is.na(ability)) %>% unnest(ability) %>% rename(Pokemon_Name = name, Weight = weight, Height = height, Total_Ability = Total) %>% arrange(desc(Total_Ability))
final_pokemon_data
}
pokemon_data()
library(dplyr)
pokemon_data_partial <- function(para = "Weight") {
requireNamespace("dplyr")
df <- pokemon_data()
paracol <- select(df, para)
return(cbind(df$Pokemon_Name, paracol))
}
pokemon_data_partial()
library(dplyr)
summary_pokemon_data_partial <- function(para = "Weight", summary = TRUE) {
requireNamespace("dplyr")
df <- pokemon_data()
partial <- select(df, para)
if (summary == TRUE) {
return(summary(partial))
}
}
summary_pokemon_data_partial()
